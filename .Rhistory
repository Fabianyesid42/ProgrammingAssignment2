matrix_example<-makeCacheMatrix(matrix(1:6, 3, 2))
matrix_example$get()
makeCacheMatrix <- function(x = matrix()) {
inver <- NULL
set <- function(k) {
x <<- k
inver <<- NULL
}
get <- function() x
setInverse <- function(inverse) inver <<- inverse
getInverse <- function() inver
list(set = set,
get = get,
setInverse = setInverse,
getInverse = getInverse)
}
cacheSolve <- function(x, ...) {
inver <- x$getInverse()
if (!is.null(inver)) {
message("cached data")
return(inver)
}
mat <- x$get()
inver <- solve(mat, ...)
x$setInverse(inver)
inver
}
matrix_example<-makeCacheMatrix(matrix(1:6, 3, 2))
matrix_example$get()
matrix_example$getInverse()
cacheSolve(matrix_example)
matrix_example<-makeCacheMatrix(matrix(1:9, 3, 3))
matrix_example$get()
matrix_example$getInverse()
cacheSolve(matrix_example)
matrix_example<-makeCacheMatrix(matrix(6:10, 2, 2))
matrix_example$get()
matrix_example<-makeCacheMatrix(matrix(6:9, 2, 2))
matrix_example$get()
matrix_example$getInverse()
cacheSolve(matrix_example)
## Ejemplos
matrix_example<-makeCacheMatrix(matrix(1:9, 3, 3,byrow = TRUE))
matrix_example<-makeCacheMatrix(matrix(1:9, 3, 3,byrow = TRUE))
matrix_example$get()
matrix_example$getInverse()
cacheSolve(matrix_example)
matrix_example<-makeCacheMatrix(matrix(9:12, 2, 2,byrow = TRUE))
matrix_example$get()
matrix_example$getInverse()
cacheSolve(matrix_example)
